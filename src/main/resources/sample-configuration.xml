<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:configuration
	xmlns:ns2="http://github.com/davidmoten/logan/configuration">
	
	<!--  the maximum number of log entries to hold in memory (eldest are trimmed first) -->
	<maxSize>1000000</maxSize>
	
	<!--  token delimiters when using scan parameter to find the nth double in a log message  -->
	<scanDelimiterPattern>(\s|,|:|\|;|=)+</scanDelimiterPattern>
	
	<!--  the default parser for all groups -->
	<parser>
		<!-- source for each log entry is extracted from the log filename (not including the directory)  -->
		<sourcePattern>^[a-zA-Z][^\.]*</sourcePattern>
	
		<!-- pattern to match against log line. The groups are associated with the patternGroups below -->
		<pattern>^(\d\d\d\d-\d\d-\d\d \d\d:\d\d:\d\d[\.,]\d\d\d) +(\S+) +(\S+)(?: +(\S+)?) *- (.*)$</pattern>
	
		<!--  These pattern groups have special meaning, don't mess with the names just the order -->
		<patternGroups>logTimestamp,logLevel,logLogger,threadName,logMsg</patternGroups>
	
		<!--  logMsg is broken into key values using this pattern  -->
		<messagePattern>(\b[a-zA-Z](?:\w| )*)=([^;|,]*)(;|\||,|$)</messagePattern>
	
		<!--  the log line timestamp is extracted using the following SimpleDateFormat formats in order  -->
		<timestampFormat>yyyy-MM-dd HH:mm:ss.SSS</timestampFormat>
		<timestampFormat>yyyy-MM-dd HH:mm:ss,SSS</timestampFormat>
	
		<!--  the timezone for the timestamp -->
		<timezone>UTC</timezone>
	
		<!--  set to true for logs spread over multiple lines (for example java.util.logging style logs) and use a ZZZ delimiter in the pattern -->
		<multiline>false</multiline>
	</parser>
	
	<!--  multiple groups with optional dedicated parsers can be specified here -->
	<group>
	
		<!--  can specify a parser like above here if desired -->

		<!--  default for any log matching the path is to be completely scanned and then tailed -->		
		<log>
			<!--  path uses ant-style wildcards for the base and regex matching for the filename -->
			<path>${log.base}/**/cts.log</path>
		</log>
		<!--  don't want to watch rolled over logs, they are scanned then closed -->
		<log watch="false">
			<path>${log.base}/**/cts.log.2.*</path>
		</log>
	</group>
	<group>
		<parser>
	        <pattern>^(\d\d\d\d/\d\d/\d\d:\d\d\.\d\d\.\d\d):([^:]+):([^:]+):([^:]+):(.*)$</pattern>
	        <patternGroups>logTimestamp,logLogger,logMethod,logLevel,logMsg</patternGroups>
	        <messagePattern>(\b[a-zA-Z](?:\w| )*)=([^;|,]*)(;|\||,|$)</messagePattern>
	        <timestampFormat>yyyy/MM/dd:HH.mm.ss</timestampFormat>
	        <timezone>UTC</timezone>
	        <multiline>false</multiline>
    	</parser>
    	<log watch="false" source="inwardsRouter" watchLatest="true">
            <path>/aus${mode}/inwardsRouter/logs/**/2.*</path>
        </log>
	</group>
	
</ns2:configuration>